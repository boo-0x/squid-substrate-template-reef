type Account @entity {
  "Account address"
  id: ID!
  transfersTo: [Transfer!] @derivedFrom(field: "to")
  transfersFrom: [Transfer!] @derivedFrom(field: "from")
}

type Transfer @entity {
  id: ID!
  blockNumber: Int! @index
  timestamp: DateTime! @index
  extrinsicHash: String @index
  from: Account!
  to: Account!
  amount: BigInt! @index
  fee: BigInt! # fee is calculated at the best effort and may be zero for some old extrinsics
}

type ERC1155Token @entity {
  id: ID!
  owner: ERC1155Owner
  uri: String
  transfers: [ERC1155Transfer!]! @derivedFrom(field: "token")
  contract: ERC1155Contract
}

type ERC1155Owner @entity {
  id: ID!
  ownedTokens: [ERC1155Token!]! @derivedFrom(field: "owner")
  balance: BigInt
}

type ERC1155Contract @entity {
  id: ID!
  mintedTokens: [ERC1155Token!]! @derivedFrom(field: "contract")
}

type ERC1155Transfer @entity {
  id: ID!
  token: ERC1155Token!
  from: ERC1155Owner
  to: ERC1155Owner
  timestamp: BigInt!
  block: Int!
  transactionHash: String!
}